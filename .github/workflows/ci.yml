name: DepGuardian CI/CD

on:
  push:
    branches: [ main ]   # now triggers on every push to main
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  test_and_format_check:
    name: Test & Format Check (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.11', '3.12', '3.13']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_dev.txt
          pip install .

      - name: Install Node.js dependencies
        run: npm ci

      - name: Run tests with Pytest
        run: pytest

  publish:
    name: Build and publish to PyPI
    needs: test_and_format_check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: python -m pip install --upgrade pip build twine

      - name: Build package
        run: python -m build

      - name: Publish distribution ðŸ“¦ to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/* --verbose
